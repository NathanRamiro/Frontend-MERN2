{"version":3,"sources":["components/Header.js","pages/Home.js","constants/config.js","components/CardAluno.js","pages/Alunos.js","components/IsCpfValido.js","pages/Add.js","pages/Edit.js","pages/Delete.js","routes/Rotas.js","App.js","index.js"],"names":["Header","Navbar","bg","variant","Brand","href","Nav","className","Link","Home","useEffect","document","title","Container","fluid","Jumbotron","BACKEND","CardAluno","props","data","nome","cpf","dataMatricula","curso","Date","Card","Body","Title","Text","toLocaleDateString","Alunos","useState","dados","setDados","carregando","setCarregando","obtemAlunos","a","fetch","then","response","json","catch","err","console","log","message","Row","Col","style","justifyContent","flex","display","Spinner","animation","xs","lg","Button","marginBottom","onClick","size","block","length","map","val","IsCpfValido","match","numeros","replace","arrayNumeros","split","validador1","forEach","num","index","push","validador2","final","toString","Add","setNome","setCpf","setCurso","status","setStatus","dtMat","trim","alert","isCpfValido","uriAluno","method","body","JSON","stringify","headers","Form","Group","Label","Control","as","value","onChange","e","target","Check","checked","type","label","marginTop","cadastraAluno","Edit","setDtMat","formVisisvel","setFormVisivel","undefined","errors","disabled","consultaAluno","editaAluno","Error","deletaAluno","Rotas","exact","path","component","Delete","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68a89d10.chunk.js","sourcesContent":["import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport {MdAccountBox, MdAdd, MdEdit, MdDelete, MdHelpOutline, MdPeople} from 'react-icons/md'\n\nconst Header = () => {\n    return (\n        <Navbar bg=\"primary\" variant=\"dark\">\n            \n                <Navbar.Brand href=\"#home\"><MdAccountBox /> BD Alunos </Navbar.Brand>\n                <Nav className=\"me-auto\">\n                <Nav.Link href=\"#alunos\"><MdPeople /> Alunos</Nav.Link>\n                    <Nav.Link href=\"#add\"><MdAdd /> Adicionar</Nav.Link>\n                    <Nav.Link href=\"#edit\"><MdEdit /> Editar</Nav.Link>\n                    <Nav.Link href=\"#delete\"><MdDelete /> Deletar</Nav.Link>\n                    <Nav.Link><MdHelpOutline /> Ajuda </Nav.Link>\n                </Nav>\n            \n        </Navbar>\n    )\n}\n\nexport default Header","import React, { useEffect } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n\nimport Header from '../components/Header'\n\n/*\n{\n    \"foto\": {\n      \"originalname\": \"massas2.png\",\n      \"path\": \"public/uploads/massas.png\",\n      \"size\": 20771,\n      \"mimetype\": \"image/png\"\n    },\n    \"curso\": ['ADS','Mecatronica','Eventos','Adm','Economia'],\n    \"status\": true,\n    \"_id\": \"60aeda52812133e2de5b1493\",\n    \"nome\": \"Jo\",\n    \"dataMatricula\": \"12983571982375\",\n    \"cpf\": \"527.975.133-20\",\n    \"createdAt\": \"2021-05-26T23:31:30.303Z\",\n    \"updatedAt\": \"2021-05-26T23:31:30.303Z\",\n    \"__v\": 0\n}\n*/\n\nconst Home = () => {\n    useEffect(() => {\n        document.title = 'Home'\n    }, [])\n\n    return (\n        <>\n            <Container fluid className='p-0' >\n\n                <Header />\n                <Jumbotron>\n                    <h1>Bem Vindo</h1> <br></br>\n                    <p>Este banco de dados contem as informações dos alunos cadastrados</p>\n                    <p>Use os botões acima para navegar entre as paginas</p>\n                </Jumbotron>\n\n            </Container>\n        </>\n    )\n}\n\nexport default Home","export const BACKEND = 'https://backend-trabalho2.herokuapp.com/alunos'\n\nconst config = {BACKEND}\n\nexport default config","import React from 'react'\nimport Card from 'react-bootstrap/Card'\n\nconst CardAluno = (props) => {\n\n    let {nome,cpf,dataMatricula,curso} = props.data\n    let data = new Date(dataMatricula)\n\n\n    //if(props.visivel)\n    return (\n        <Card>\n            <Card.Header>\n                {nome}\n            </Card.Header>\n            <Card.Body>\n\n                <Card.Title>CPF: {cpf}</Card.Title>\n                <Card.Text>Data de Matricula: {data.toLocaleDateString()}</Card.Text>\n                <Card.Text>Curso: {curso}</Card.Text>\n\n            </Card.Body>\n        </Card>\n        \n    )\n}\n\nexport default CardAluno","import React, { useEffect, useState } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\n\nimport {MdLoop} from 'react-icons/md'\n\nimport { BACKEND } from '../constants/config'\n\nimport Header from '../components/Header'\nimport CardAluno from '../components/CardAluno'\n\nconst Alunos = () => {\n\n    const [dados, setDados] = useState([{}])\n    const [carregando, setCarregando] = useState(false)\n\n    useEffect(() => {\n        document.title = 'Alunos'\n\n        obtemAlunos()\n    }, [])\n\n    async function obtemAlunos() {\n\n        setCarregando(true)\n\n        await fetch('https://backend-trabalho2.herokuapp.com/alunos')\n            .then(response => response.json())\n            .then(data => {\n\n                setDados(data)\n            }).catch((err => {\n                console.log(err.message)\n            }))\n\n        setCarregando(false)\n    }\n\n    return (\n        <>\n            <Container fluid className='p-0' >\n                <Header />\n                <Jumbotron>\n                    <Row>\n                        {carregando ?\n                            (\n                                <Col style={{ justifyContent: 'center', flex: 1, display: 'flex' }}>\n                                    <Spinner animation=\"border\" variant=\"primary\" />\n                                </Col>\n                            ) : (\n\n                                <Col xs={12} lg={12}>\n\n                                    <Button style={{marginBottom:16}} onClick={()=>obtemAlunos()} variant=\"primary\" size=\"lg\" block>\n                                       <MdLoop /> Recarregar\n                                    </Button>\n\n                                    {dados.length===0&&\n                                        <Container className='m-0' >\n                                         <p>Não existem dados</p>\n                                        </Container>\n                                    }\n\n                                    {!carregando && dados.map((val) => {\n                                        return (\n                                            <Container>\n                                                <CardAluno data={val} />\n                                            </Container>\n                                        )\n                                    })}\n                                </Col>\n                                \n                            )\n                        }\n                    </Row>\n                </Jumbotron>\n            </Container>\n        </>\n    )\n}\n\nexport default Alunos","/**\n * \n * Recebe um CPF e retorna se o mesmo é valido\n * \n * @param {String} cpf \n * @returns {Boolean}\n */\n\nfunction IsCpfValido(cpf){\n\n    if (!cpf.match(/\\d{3,3}\\.\\d{3,3}\\.\\d{3,3}-\\d{2,2}/)){\n        return false\n    }\n\n    let numeros = cpf.replace(/[\\.-]/g,\"\")\n    let arrayNumeros = numeros.split('',numeros.length - 2)\n\n    let validador1 = 0\n\n    arrayNumeros.forEach((num,index)=>{\n        validador1 += num * (index + 1)\n    })\n    \n    validador1 = validador1 % 11 >= 10 \n                 ? 0\n                 : validador1 % 11\n\n    arrayNumeros.push(validador1)\n\n    let validador2 = 0\n\n    arrayNumeros.forEach((num,index)=>{\n        validador2 += num * index\n    })\n\n    validador2 = validador2 % 11 >= 10 \n                 ? 0\n                 : validador2 % 11\n\n    arrayNumeros.push(validador2)\n\n    let final = arrayNumeros.toString()\n    final = final.replace(/,/g,'')\n\n    return final === cpf.replace(/[\\.-]/g,\"\")\n\n\n}\n\nexport default IsCpfValido","import React, { useState } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n\nimport {MdAddBox} from 'react-icons/md'\n\nimport Header from '../components/Header'\nimport isCpfValido from '../components/IsCpfValido'\n\nimport {BACKEND} from '../constants/config'\n\nconst Add = () => {\n\n    const [nome, setNome] = useState('')\n    const [cpf, setCpf] = useState('')\n    const [curso, setCurso] = useState('ADS')\n    const [status, setStatus] = useState(true)\n\n    async function cadastraAluno() {\n\n        let dtMat = new Date()\n\n        if((nome.trim()).length===0){\n            alert('O nome do aluno é obrigatorio')\n            setNome('')\n            return\n        }\n\n        if(!isCpfValido(cpf)){\n            alert('CPF invalido')\n            setCpf('')\n            return\n        }\n\n        let data = {\n            curso: curso,\n            status: status,\n            nome: nome,\n            dataMatricula: dtMat,\n            cpf: cpf\n        }\n\n        let uriAluno = `${BACKEND}/${cpf}`\n\n        await fetch(uriAluno)\n        .then(response=>response.json())\n        .then(data=>{\n\n            if(data.cpf===cpf){\n\n                alert('Esse(a) aluno(a) ja foi cadastrado(a)')\n                    setNome('')\n                    setCpf('')\n                return\n            }\n\n        }).catch(err=>{\n            console.log(err)\n        })\n\n        await fetch(BACKEND, {\n            method: \"POST\",\n            body: JSON.stringify(data),\n            headers: { \"Content-type\": 'application/json' }\n        })\n            .then(response => response.json())\n            .then(data => {\n\n                if (data.cpf===cpf) {\n\n                    alert('Aluno cadastrado com sucesso')\n                    setNome('')\n                    setCpf('')\n                    \n                }\n\n            }).catch(err => {\n                console.log(err)\n            })\n\n    }\n\n    return (\n        <>\n            <Header />\n            <Jumbotron>\n                <Container>\n                    <Row>\n                        <Col>\n                            <Form>\n                                <Form.Group>\n                                    <Form.Label>Nome</Form.Label>\n                                    <Form.Control as='input' value={nome} onChange={(e) => {\n                                        setNome(e.target.value)\n                                    }} />\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12} lg={6} >\n                            <Form>\n                                <Form.Group>\n                                    <Form.Label>CPF</Form.Label>\n                                    <Form.Control as='input' value={cpf} onChange={(e) => {\n                                        setCpf(e.target.value)\n                                    }} />\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col xs={12} lg={6}>\n                            <Form.Group>\n                                <Form.Label>Curso</Form.Label>\n                                <Form.Control as='select' value={curso} onChange={(e) => {\n                                    setCurso(e.target.value)\n                                }} >\n                                    <option>ADS</option>\n                                    <option>Mecatronica</option>\n                                    <option>Eventos</option>\n                                    <option>Adm</option>\n                                    <option>Economia</option>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form>\n                                <Form.Check checked={status} type='checkbox' value={status}\n                                    label={status ? 'Ativo' : 'Não ativo'}\n                                    onChange={() => setStatus(!status)} />\n                            </Form>\n                        </Col>\n                    </Row>\n                    <Row style={{ marginTop: 32 }}>\n                        <Col>\n                            <Button variant=\"primary\" block\n                                onClick={() => cadastraAluno()}>\n                                <MdAddBox /> Cadastrar\n                            </Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron>\n        </>\n    )\n\n}\n\nexport default Add","import React, { useState } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n\nimport {MdSearch,MdCreate,MdClear} from 'react-icons/md'\n\nimport Header from '../components/Header'\n\nimport { BACKEND } from '../constants/config'\n\nconst Edit = () => {\n\n    const [nome, setNome] = useState('')\n    const [cpf, setCpf] = useState('')\n    const [curso, setCurso] = useState('')\n    const [status, setStatus] = useState(true)\n    const [dtMat, setDtMat] = useState('')\n    const [formVisisvel, setFormVisivel] = useState(false)\n\n    async function consultaAluno() {\n\n        let uriAluno = `${BACKEND}/${cpf}`\n        await fetch(uriAluno)\n            .then(response => response.json())\n            .then(data => {\n\n                if (data.cpf === cpf) {\n\n                    setNome(data.nome)\n                    setCurso(data.curso)\n                    setStatus(data.status)\n                    setDtMat(data.dataMatricula)\n                    setFormVisivel(true)\n                    return\n                } else {\n                    alert('Esse(a) aluno(a) não existe')\n                }\n\n            }).catch(err => {\n                console.log(err.message)\n            })\n    }\n\n    async function editaAluno() {\n\n        if ((nome.trim()).length === 0) {\n            alert('O nome do aluno é obrigatorio')\n            setNome('')\n            return\n        }\n\n        let data = {\n            \n            \"curso\": curso,\n            \"status\": status,\n            \"nome\": nome,\n            \"dataMatricula\": dtMat,\n            \"cpf\": cpf\n\n        }\n\n\n        await fetch(BACKEND, {\n            method: \"PUT\",\n            body: JSON.stringify(data),\n            headers: { \"Content-type\": 'application/json' }\n        })\n            .then(response => response.json())\n            .then(data => {\n\n                let { errors } = data\n\n                if (errors === undefined) {\n                    alert('Dados alterados com sucesso')\n                    setNome('')\n                    setCpf('')\n                    setFormVisivel(false)\n                } else {\n                    alert('ocorreu um erro')\n                }\n\n            }).catch(err => {\n                alert(err.message)\n            })\n\n    }\n\n    return (\n        <>\n            <Header />\n            <Jumbotron>\n                <Row>\n                    <Col xs={12} lg={6} >\n                        <Form>\n                            <Form.Group>\n                                <Form.Label>CPF</Form.Label>\n                                <Form.Control disabled={formVisisvel} as='input' value={cpf} onChange={(e) => {\n                                    setCpf(e.target.value)\n                                }} />\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                    <Col xs={12} lg={6}>\n                        <Button variant=\"primary\" block\n                            onClick={() => consultaAluno()}>\n                            <MdSearch /> Buscar\n                    </Button>\n                    </Col>\n                </Row>\n            </Jumbotron>\n            {formVisisvel &&\n                <Jumbotron>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Label>Nome</Form.Label>\n                                        <Form.Control as='input' value={nome} onChange={(e) => {\n                                            setNome(e.target.value)\n                                        }} />\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={12} lg={6}>\n                                <Form.Group>\n                                    <Form.Label>Curso</Form.Label>\n                                    <Form.Control as='select' value={curso} onChange={(e) => {\n                                        setCurso(e.target.value)\n                                    }} >\n                                        <option>ADS</option>\n                                        <option>Mecatronica</option>\n                                        <option>Eventos</option>\n                                        <option>Adm</option>\n                                        <option>Economia</option>\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form>\n                                    <Form.Check checked={status} type='checkbox' value={status}\n                                        label={status ? 'Ativo' : 'Não ativo'}\n                                        onChange={() => setStatus(!status)} />\n                                </Form>\n                            </Col>\n                        </Row>\n                        <Row style={{ marginTop: 32 }}>\n                            <Col>\n                                <Button variant=\"primary\" block\n                                    onClick={() => editaAluno()}>\n                                    <MdCreate /> Alterar\n                                </Button>\n                                <Button variant=\"danger\" block\n                                    onClick={() => setFormVisivel(false)}>\n                                    <MdClear /> Cancelar\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Jumbotron>\n            }\n        </>\n    )\n\n}\n\nexport default Edit","import React, { useState } from 'react'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n\nimport {MdDelete} from 'react-icons/md'\n\nimport Header from '../components/Header'\n\nimport { BACKEND } from '../constants/config'\n\nconst Add = () => {\n\n    const [cpf, setCpf] = useState('')\n\n    async function deletaAluno() {\n\n        let uriAluno = `${BACKEND}/${cpf}`\n        await fetch(uriAluno, {\n            method: \"DELETE\"\n        })\n            .then(response => response.json())\n            .then(data => {\n                let { message } = data\n                if(message){\n                    alert(message)\n                } else{\n                    throw new Error()\n                }\n\n            }).catch(err => {\n                alert('O aluno não foi encontrado')\n            })\n    }\n\n    return (\n        <>\n            <Header />\n            <Jumbotron>\n                <Row>\n                    <Col xs={12} lg={6} >\n                        <Form>\n                            <Form.Group>\n                                <Form.Label>CPF</Form.Label>\n                                <Form.Control as='input' value={cpf} onChange={(e) => {\n                                    setCpf(e.target.value)\n                                }} />\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                    <Col xs={12} lg={6}>\n                        <Button variant=\"danger\" block\n                            onClick={() => deletaAluno()}>\n                            <MdDelete /> Remover\n                        </Button>\n                    </Col>\n                </Row>\n            </Jumbotron>\n        </>\n    )\n\n}\n\nexport default Add","import React from 'react'\nimport {HashRouter, Switch, Route} from 'react-router-dom'\n\nimport Home from '../pages/Home'\nimport Alunos from '../pages/Alunos'\nimport Add from '../pages/Add'\nimport Edit from '../pages/Edit'\nimport Delete from '../pages/Delete'\n\nexport default function Rotas(){\n    return(\n        <HashRouter>\n            <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/home' component={Home} />\n                <Route exact path='/alunos' component={Alunos} />\n                <Route exact path='/add' component={Add} />\n                <Route exact path='/edit' component={Edit} />\n                <Route exact path='/delete' component={Delete} />\n            </Switch>\n        </HashRouter>\n    )\n}","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Rotas from './routes/Rotas'\n\nconst App = () =>{\n  return(\n    <Rotas />\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}